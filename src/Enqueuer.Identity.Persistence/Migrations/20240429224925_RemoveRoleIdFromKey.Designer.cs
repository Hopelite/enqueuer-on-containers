// <auto-generated />
using System;
using Enqueuer.Identity.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Enqueuer.Identity.Persistence.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20240429224925_RemoveRoleIdFromKey")]
    partial class RemoveRoleIdFromKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("uri");

                    b.HasKey("Id")
                        .HasName("pk_resources");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_resources_parent_id");

                    b.ToTable("resources", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_roles_name");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("pk_scopes");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_scopes_name");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_scopes_parent_id");

                    b.ToTable("scopes", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("last_name");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_users_user_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.UserResourceRoles", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("resource_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "ResourceId")
                        .HasName("pk_user_resource_roles");

                    b.HasIndex("ResourceId")
                        .HasDatabaseName("ix_user_resource_roles_resource_id");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_user_resource_roles_role_id");

                    b.ToTable("user_resource_roles", (string)null);
                });

            modelBuilder.Entity("RoleScope", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("integer")
                        .HasColumnName("roles_id");

                    b.Property<int>("ScopesId")
                        .HasColumnType("integer")
                        .HasColumnName("scopes_id");

                    b.HasKey("RolesId", "ScopesId")
                        .HasName("pk_role_scope");

                    b.HasIndex("ScopesId")
                        .HasDatabaseName("ix_role_scope_scopes_id");

                    b.ToTable("role_scope", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Resource", b =>
                {
                    b.HasOne("Enqueuer.Identity.Persistence.Models.Resource", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_resources_resources_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Scope", b =>
                {
                    b.HasOne("Enqueuer.Identity.Persistence.Models.Scope", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_scopes_scopes_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.UserResourceRoles", b =>
                {
                    b.HasOne("Enqueuer.Identity.Persistence.Models.Resource", "Resource")
                        .WithMany("ResourceRoles")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_resource_roles_resources_resource_id");

                    b.HasOne("Enqueuer.Identity.Persistence.Models.Role", "Role")
                        .WithMany("ResourceRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_resource_roles_roles_role_id");

                    b.HasOne("Enqueuer.Identity.Persistence.Models.User", "User")
                        .WithMany("ResourceRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_resource_roles_users_user_id");

                    b.Navigation("Resource");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoleScope", b =>
                {
                    b.HasOne("Enqueuer.Identity.Persistence.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_role_scope_roles_roles_id");

                    b.HasOne("Enqueuer.Identity.Persistence.Models.Scope", null)
                        .WithMany()
                        .HasForeignKey("ScopesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_role_scope_scopes_scopes_id");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Resource", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ResourceRoles");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Role", b =>
                {
                    b.Navigation("ResourceRoles");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.Scope", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Enqueuer.Identity.Persistence.Models.User", b =>
                {
                    b.Navigation("ResourceRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
