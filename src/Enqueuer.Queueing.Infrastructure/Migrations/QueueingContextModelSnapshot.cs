// <auto-generated />
using Enqueuer.Queueing.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enqueuer.Queueing.Infrastructure.Migrations
{
    [DbContext(typeof(QueueingContext))]
    partial class QueueingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("queue_sequence")
                .IncrementsBy(10);

            modelBuilder.Entity("Enqueuer.Queueing.Infrastructure.Persistence.Entities.Participant", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<int>("QueueId")
                        .HasColumnType("int");

                    b.HasKey("Id", "Number", "QueueId");

                    b.HasIndex("QueueId");

                    b.ToTable("participants", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Queueing.Infrastructure.Persistence.Entities.Queue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "queue_sequence");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("queues", (string)null);
                });

            modelBuilder.Entity("Enqueuer.Queueing.Infrastructure.Persistence.Entities.Participant", b =>
                {
                    b.HasOne("Enqueuer.Queueing.Infrastructure.Persistence.Entities.Queue", "Queue")
                        .WithMany("Participants")
                        .HasForeignKey("QueueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Queue");
                });

            modelBuilder.Entity("Enqueuer.Queueing.Infrastructure.Persistence.Entities.Queue", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
