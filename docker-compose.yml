version: '3.4'

services:
  enqueuer.queueing.api:
    image: ${DOCKER_REGISTRY-}enqueuerqueueingapi
    build:
      context: .
      dockerfile: src/Enqueuer.Queueing.API/Dockerfile
    environment:
      # - ConnectionStrings__QueueingDB=Server=sqlserver;Database=myDatabase;User Id=sa;Password=${ENQUEUER_QUEUEING_DATABASE_PASSWORD};TrustServerCertificate=true;
      - ConnectionStrings__EventBus=amqp://guest:guest@eventbus:5672
      - EventsDatabase__ConnectionString=mongodb://user:pass@mongodb
    depends_on:
      # - sqlserver
      - eventbus
      - mongodb
    # healthcheck:
    #     test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
    #     interval: 30s
    #     timeout: 30s
    #     retries: 3

  eventbus:
    image: rabbitmq:management-alpine
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management interface port

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ./data
        target: /data/db

  # TODO: replace with non-containerized database    
  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   environment:
  #     ACCEPT_EULA: "Y"
  #     SA_PASSWORD: ${ENQUEUER_QUEUEING_DATABASE_PASSWORD}
  #   ports:
  #     - "1433:1433"

  enqueuer.telegram.notifications:
    image: ${DOCKER_REGISTRY-}enqueuertelegramnotifications
    build:
      context: .
      dockerfile: src/Enqueuer.Telegram.Notifications/Dockerfile
    environment:
      - ConnectionStrings__EventBus=amqp://guest:guest@eventbus:5672
      - ConnectionStrings__NotificationsDB=Data Source=/data/NotificationsDB.db
      - TelegramClient__AccessToken=${ENQUEUER_TELEGRAM_BOT_ACCESS_TOKEN}
    depends_on:
      - enqueuer.queueing.api
      - eventbus
    volumes:
      - C:/Users/vkurd/DATA:/data

  enqueuer.telegram.bff:
    image: ${DOCKER_REGISTRY-}enqueuertelegrambff
    build:
      context: .
      dockerfile: src/Enqueuer.Telegram.BFF/Dockerfile
    environment:
      - ConnectionStrings__QueueingAPI=http://enqueuer.queueing.api:8080
      - TelegramClient__AccessToken=${ENQUEUER_TELEGRAM_BOT_ACCESS_TOKEN}
    depends_on:
      - enqueuer.queueing.api

volumes:
  notificationsdb:
